{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["'use strict';\n\nimport axios from 'axios';\n\nconst PIXABAY_API_KEY = import.meta.env.VITE_PIXABAY_API_KEY;\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nexport function getImagesByQuery(query) {\n  return axios.get('', {\n    params: {\n      key: PIXABAY_API_KEY,\n      q: query,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: 'true',\n      per_page: 60,\n    },\n  });\n}\n","'use strict';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nlet galleryLB;\n\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nexport function createGallery(images) {\n  const listHTML = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `<li class=\"gallery-item\">\n    <a class=\"gallery-link\" href=\"${largeImageURL}\">\n      <img\n        class=\"gallery-image\"\n        src=\"${webformatURL}\"\n        alt=\"${tags}\"\n      />\n    </a>\n    <div class=\"image-captions\">\n        <p class=\"caption-value\">\n          <b class=\"caption-header\">Likes</b>\n          ${likes}\n        </p>\n        <p class=\"caption-value\">\n          <b class=\"caption-header\">Views</b>\n          ${views}\n        </p>\n        <p class=\"caption-value\">\n          <b class=\"caption-header\">Comments</b>\n          ${comments}\n        </p>\n        <p class=\"caption-value\">\n          <b class=\"caption-header\">Downloads</b>\n          ${downloads}\n        </p>\n    </div>\n  </li>`\n    )\n    .join('');\n  gallery.innerHTML = listHTML;\n\n  reBuildGallery();\n}\n\nfunction reBuildGallery() {\n  if (!galleryLB) {\n    galleryLB = new SimpleLightbox('.gallery a', {\n      captions: true,\n      captionPosition: 'bottom',\n      captionDelay: 250,\n      captionsData: 'alt',\n    });\n  } else {\n    galleryLB.refresh();\n  }\n}\n\nexport function clearGallery() {\n  gallery.innerHTML = '';\n  reBuildGallery();\n}\n\nexport function showLoader() {\n  loader.style.display = 'block';\n}\n\nexport function hideLoader() {\n  loader.style.display = 'none';\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { getImagesByQuery } from './js/pixabay-api';\n\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './js/render-functions';\n\nconst queryForm = document.querySelector('.form');\n\niziToast.settings({\n  position: 'topRight',\n});\n\nqueryForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const userQuery = event.currentTarget.elements['search-text'].value.trim();\n\n  clearGallery();\n  showLoader();\n\n  if (userQuery === '') {\n    event.currentTarget.elements['search-text'].value = '';\n    iziToast.error({\n      title: 'Error',\n      message: 'Your query is empty, enter the query text in search field!',\n    });\n    hideLoader();\n    return;\n  }\n\n  getImagesByQuery(userQuery)\n    .then(response => {\n      const hits = response.data.hits;\n      if (hits.length > 0) {\n        createGallery(hits);\n      } else {\n        clearGallery();\n        iziToast.error({\n          title: 'Error',\n          message:\n            'Sorry, there are no images matching your search query.Please try again!',\n        });\n      }\n    })\n    .catch(() =>\n      iziToast.error({\n        title: 'Error',\n        message: 'Error loading images from the server!',\n      })\n    )\n    .finally(() => hideLoader());\n\n  queryForm.reset();\n});\n"],"names":["PIXABAY_API_KEY","axios","getImagesByQuery","query","galleryLB","gallery","loader","createGallery","images","listHTML","webformatURL","largeImageURL","tags","likes","views","comments","downloads","reBuildGallery","SimpleLightbox","clearGallery","showLoader","hideLoader","queryForm","iziToast","event","userQuery","response","hits"],"mappings":"owBAIA,MAAMA,EAAkB,qCAExBC,EAAM,SAAS,QAAU,2BAElB,SAASC,EAAiBC,EAAO,CAC/B,OAAAF,EAAM,IAAI,GAAI,CACnB,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,SAAU,EACZ,CAAA,CACD,CACH,CCdA,IAAIC,EAEJ,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAExC,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAWD,EACd,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA,oCACwBL,CAAa;AAAA;AAAA;AAAA,eAGlCD,CAAY;AAAA,eACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMPC,CAAK;AAAA;AAAA;AAAA;AAAA,YAILC,CAAK;AAAA;AAAA;AAAA;AAAA,YAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,YAIRC,CAAS;AAAA;AAAA;AAAA,QAIhB,EACA,KAAK,EAAE,EACVX,EAAQ,UAAYI,EAEpBQ,GACF,CAEA,SAASA,GAAiB,CACnBb,EAQHA,EAAU,QAAO,EAPjBA,EAAY,IAAIc,EAAe,aAAc,CAC3C,SAAU,GACV,gBAAiB,SACjB,aAAc,IACd,aAAc,KACpB,CAAK,CAIL,CAEO,SAASC,GAAe,CAC7Bd,EAAQ,UAAY,GACpBY,GACF,CAEO,SAASG,GAAa,CAC3Bd,EAAO,MAAM,QAAU,OACzB,CAEO,SAASe,GAAa,CAC3Bf,EAAO,MAAM,QAAU,MACzB,CCnEA,MAAMgB,EAAY,SAAS,cAAc,OAAO,EAEhDC,EAAS,SAAS,CAChB,SAAU,UACZ,CAAC,EAEDD,EAAU,iBAAiB,SAAUE,GAAS,CAC5CA,EAAM,eAAc,EACpB,MAAMC,EAAYD,EAAM,cAAc,SAAS,aAAa,EAAE,MAAM,OAKpE,GAHAL,IACAC,IAEIK,IAAc,GAAI,CACpBD,EAAM,cAAc,SAAS,aAAa,EAAE,MAAQ,GACpDD,EAAS,MAAM,CACb,MAAO,QACP,QAAS,4DACf,CAAK,EACDF,IACA,MACD,CAEDnB,EAAiBuB,CAAS,EACvB,KAAKC,GAAY,CAChB,MAAMC,EAAOD,EAAS,KAAK,KACvBC,EAAK,OAAS,EAChBpB,EAAcoB,CAAI,GAElBR,IACAI,EAAS,MAAM,CACb,MAAO,QACP,QACE,yEACZ,CAAS,EAET,CAAK,EACA,MAAM,IACLA,EAAS,MAAM,CACb,MAAO,QACP,QAAS,uCACjB,CAAO,CACF,EACA,QAAQ,IAAMF,EAAU,CAAE,EAE7BC,EAAU,MAAK,CACjB,CAAC"}